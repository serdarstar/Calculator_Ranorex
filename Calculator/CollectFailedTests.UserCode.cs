///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Reporting;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace Calculator
{
    public partial class CollectFailedTests
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void FailedTestsCollect()
        {
            
        	
        	var suite = TestSuite.Current.SelectedRunConfig;
            IList<ITestContainer> entries = suite.GetActiveTestContainers();
            Report.Info(entries.Count.ToString());
            
            int countFails = 0;
            entries.RemoveAt(0);
            string filePath = TestReport.ReportEnvironment.ReportFileDirectory + @"\FailedTests.csv";
        
            using(System.IO.StreamWriter failedTestFile = new System.IO.StreamWriter(filePath,true))
            {
                
                foreach(var entry in entries)
                {
                    if(entry.IsTestCase == true && entry.Status.ToString() == "Failed")
                                                            
                    {
                            countFails++;
                            string testcaseName = entry.Name;
                            failedTestFile.WriteLine(testcaseName);
                            
                    }
                    else { continue;}
                }
                
                Report.Info("Number of failed test cases: ", countFails.ToString());
            }
            

        	
        }

    }
}
